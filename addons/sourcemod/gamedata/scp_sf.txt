"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CBaseEntity::InSameTeam"
			{
				"library"	"server"
				"linux"		"@_ZNK11CBaseEntity10InSameTeamEPKS_"
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x57\x8B\xF9\x85\xC0\x75\x2A"
			}
			"CBaseTrigger::InputEnable"
			{
				"library"	"server"
				"linux"		"@_ZN12CBaseTrigger11InputEnableER11inputdata_t"
				"windows"	"\x56\x8B\xF1\xC6\x86\xAC\x04\x00\x00\x01"
			}
			"CBaseAnimating::GetBoneCache"
			{
				"library"	"server"
				"linux"		"@_ZN14CBaseAnimating12GetBoneCacheEv"
				"windows"	"\x55\x8B\xEC\xB8\x10\x18\x00\x00"
			}			
			"CTFDroppedWeapon::Create"
			{
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon6CreateEP9CTFPlayerRK6VectorRK6QAnglePKcPK13CEconItemView"
				"windows"	"\x55\x8B\xEC\x51\xA1\x2A\x2A\x2A\x2A\x80\xB8\x2A\x2A\x2A\x2A\x00\x74\x2A\x33\xC0\x8B\xE5\x5D\xC3"
			}
			"CTFDroppedWeapon::InitDroppedWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon17InitDroppedWeaponEP9CTFPlayerP13CTFWeaponBasebb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x56\x57\x8B\xF9\x8B\x4D\x08"
			}
			"CTFDroppedWeapon::InitPickedUpWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon18InitPickedUpWeaponEP9CTFPlayerP13CTFWeaponBase"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\xD9\xEE\x53\x56\x57"
			}
			"CTFGameMovement::ProcessMovement"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFGameMovement15ProcessMovementEP11CBasePlayerP9CMoveData"
				"windows"	"\x55\x8B\xEC\x56\x57\x8B\x7D\x08\x8B\xF1\x85\xFF\x74\x2A\x53"
			}
			"CTFPlayer::CanPickupDroppedWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer22CanPickupDroppedWeaponEPK16CTFDroppedWeapon"
				"windows"	"\x55\x8B\xEC\x53\x8B\x5D\x08\x56\x8B\xF1\x80\xBB\x04\x05\x00\x00\x00"
			}
			"CTFPlayer::DoAnimationEvent"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer16DoAnimationEventE17PlayerAnimEvent_ti"
				"windows"	"\x55\x8B\xEC\x51\x53\x56\x8B\x35\x2A\x2A\x2A\x2A\x8B\xD9\x8B\xCE"
			}
			"CTFPlayer::DropAmmoPack"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12DropAmmoPackERK15CTakeDamageInfobb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x28\x53\x8B\xD9\xC7\x45\xFC\x00\x00\x00\x00"
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10GetMaxAmmoEii"
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\x56\x57\x8B\xF9\x83\xF8\xFF\x75\x2A\xFF\xB7\x2A\x2A\x2A\x2A\xEB\x01\x50\xE8"
			}
			"CTFPlayer::RegenThink"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10RegenThinkEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x74\x57\x8B\xF9\x8B\x07"
			}
			"CTFPlayer::Taunt"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer5TauntE8taunts_ti"
				"windows"	"\x55\x8B\xEC\x81\xEC\xD4\x00\x00\x00\x53\x56\x57\x8B\xF9\xE8"
			}
			"CTFPlayer::TeamFortress_CalculateMaxSpeed"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer30TeamFortress_CalculateMaxSpeedEb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x83\x3D\x2A\x2A\x2A\x2A\x00\x56\x8B\xF1\x75\x2A\xD9\xEE\x5E\x8B\xE5\x5D\xC2\x04\x00\x8B\x86"
			}
			"CTFPlayer::TeamFortress_SetSpeed"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer21TeamFortress_SetSpeedEv"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x83\xEC\x1C\x53"
			}
			"CTFPlayer::TryToPickupDroppedWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer24TryToPickupDroppedWeaponEv"
				"windows"	"\x56\x6A\x00\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x84\xC0\x75\x2A\x32\xC0"
			}
			"CWeaponMedigun::AllowedToHealTarget"
			{
				"library"	"server"
				"linux"		"@_ZN14CWeaponMedigun19AllowedToHealTargetEP11CBaseEntity"
				"windows"	"\x55\x8B\xEC\x53\x8B\xD9\x57\x8B\x93\x10\x02\x00\x00\x85\xD2\x0F\x84\x2A\x2A\x2A\x2A\xB9\xFF\x1F\x00\x00\x83\xFA\xFF\x74\x2A\x0F\xB7\xCA\xA1\x2A\x2A\x2A\x2A\xC1\xE1\x04\x8D\x78\x04\x03\xF9\x0F\x84\x2A\x2A\x2A\x2A\xC1\xEA\x10\x39\x57\x04\x0F\x85\x2A\x2A\x2A\x2A\x8B\x3F\x85\xFF\x0F\x84\x2A\x2A\x2A\x2A\x8B\x07\x8B\xCF\x8B\x80\x48\x01\x00\x00\xFF\xD0\x84\xC0\x0F\x84\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x85\xF6\x0F\x84\x2A\x2A\x2A\x2A\x8B\x06"
			}
			"AI_CriteriaSet::FindCriterionIndex"
			{
				"linux"		"@_ZNK14AI_CriteriaSet18FindCriterionIndexEPKc"
				"windows"	"\x55\x8B\xEC\x83\xEC\x48\x56\xFF\x75\x08"
			}
			"AI_CriteriaSet::RemoveCriteria"
			{
				"linux"		"@_ZN14AI_CriteriaSet14RemoveCriteriaEPKc"
				"windows"	"\x55\x8B\xEC\x83\xEC\x48\x56\x57\xFF\x75\x08"
			}
			"PassServerEntityFilter"
			{
				"library"	"server"
				"linux"		"@_Z22PassServerEntityFilterPK13IHandleEntityS1_"
				"windows"   "\x55\x8B\xEC\x56\x8B\x75\x0C\x85\xF6\x75\x2A\xB0\x01"
			}
		}
		"Functions"
		{
			"CBaseEntity::InSameTeam"
			{
				"signature"	"CBaseEntity::InSameTeam"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pEntity"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseEntity::ShouldCollide"
			{
				"offset"	"CBaseEntity::ShouldCollide"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"collisionGroup"
					{
						"type"	"int"
					}
					"contentsMask"
					{
						"type"	"int"
					}
				}
			}
			"CBaseTrigger::InputEnable"
			{
				"signature"	"CBaseTrigger::InputEnable"
				"callconv"	"thiscall"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"inputdata"
					{
						"type"	"objectptr"
					}
				}
			}			
			"CBaseAnimating::GetBoneCache"
			{
				"signature"	"CBaseAnimating::GetBoneCache"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}			
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTeamplayRoundBasedRules::RoundRespawn"
			{
				"offset"	"CTeamplayRoundBasedRules::RoundRespawn"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
			}
			"CTeamplayRules::SetWinningTeam"
			{
				"offset"	"CTeamplayRules::SetWinningTeam"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"team"
					{
						"type"	"int"
					}
					"iWinReason"
					{
						"type"	"int"
					}
					"bForceMapReset"
					{
						"type"	"bool"
					}
					"bSwitchTeams"
					{
						"type"	"bool"
					}
					"bDontAddScore"
					{
						"type"	"bool"
					}
					"bFinal"
					{
						"type"	"bool"
					}
				}
			}
			"CTFGameMovement::ProcessMovement"
			{
				"signature"	"CTFGameMovement::ProcessMovement"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"player"
					{
						"type"	"cbaseentity" // CBasePlayer *
					}
					"mv"
					{
						"type"	"objectptr" // CMoveData *
					}
				}
			}
			"CTFPlayer::CanPickupDroppedWeapon"
			{
				"signature"	"CTFPlayer::CanPickupDroppedWeapon"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pWeapon"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::DoAnimationEvent"
			{
				"signature"	"CTFPlayer::DoAnimationEvent"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"event"
					{
						"type"	"int"
					}
					"nData"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::DropAmmoPack"
			{
				"signature"	"CTFPlayer::DropAmmoPack"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
					}
					"bEmpty"
					{
						"type"	"bool"
					}
					"bDisguisedWeapon"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"signature"	"CTFPlayer::GetMaxAmmo"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iAmmoIndex"
					{
						"type"	"int"
					}
					"iClassNumber"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::RegenThink"
			{
				"signature"	"CTFPlayer::RegenThink"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CTFPlayer::Taunt"
			{
				"signature"	"CTFPlayer::Taunt"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"taunts_t"
					{
						"type"	"int"
					}
					"int"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::TeamFortress_CalculateMaxSpeed"
			{
				"signature"	"CTFPlayer::TeamFortress_CalculateMaxSpeed"
				"callconv"	"thiscall"
				"return"	"float"
				"this"		"address"
				"arguments"
				{
					"bIgnoreSpecialAbility"
					{
						"type"	"bool"
					}
				}
			}
			"CBaseEntity::ModifyOrAppendCriteria"
			{
				"offset"	"CBaseEntity::ModifyOrAppendCriteria"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"criteriaSet"
					{
						"type"	"int"
					}
				}
			}
			"PassServerEntityFilter"
			{
				// bool PassServerEntityFilter( const IHandleEntity *pTouch, const IHandleEntity *pPass )
				"signature" "PassServerEntityFilter"
				"callconv" "cdecl"
				"return" "bool"
				"arguments"
				{
					"touch"
					{
						"type" "cbaseentity"
					}
					"pass"
					{
						"type" "cbaseentity"
					}
				}
			}
		}
		"Offsets"
		{
			"CBaseEntity::GetBaseEntity"
			{
				"linux" 	"6"
				"windows" 	"5"
			}
			"CBaseEntity::ShouldCollide"
			{
				"linux"		"18"
				"windows"	"17"
			}
			"CBaseAnimating::m_pStudioHdr"
			{
				"linux"		"300"
				"windows"	"294"
			}
			"CBasePlayer::EquipWearable"
			{
				"linux"		"439"
				"windows"	"438"
			}
			"CBasePlayer::ForceRespawn"
			{
				"linux"		"337"
				"windows"	"336"
			}
			"CTeamplayRoundBasedRules::RoundRespawn"
			{
				"linux"		"231"
				"windows"	"229"
			}
			"CTeamplayRules::SetWinningTeam"
			{
				"linux"		"165"
				"windows"	"164"
			}
			"CTeam::AddPlayer"
			{
				"linux"		"209"
				"windows"	"208"
			}
			"CTeam::RemovePlayer"
			{
				"linux"		"210"
				"windows"	"209"
			}
			"CBaseEntity::ModifyOrAppendCriteria"
			{
				"linux"		"124"
				"windows"	"123"
			}
		}
		"Addresses"
		{
			"Patch_ProcessMovement"
			{
				"linux"
				{
					"signature"	"CTFGameMovement::ProcessMovement"
					"offset"	"84"
				}
				"windows"
				{
					"signature"	"CTFGameMovement::ProcessMovement"
					"offset"	"70"
				}
			}
		}
		"Keys"
		{
			"Patch_ProcessMovement"
			{
				"windows"	"\x90\x90\x90\x90\x90\x90\x90"
				"linux"		"\x90\x90\x90\x90\x90\x90\x90"
			}
		}
	}
}